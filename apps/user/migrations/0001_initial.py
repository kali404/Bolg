# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2019-06-19 05:15
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserPont',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nicheng', models.CharField(max_length=20, verbose_name='昵称')),
                ('zhiye', models.CharField(max_length=20, verbose_name='职业')),
                ('xianju', models.CharField(max_length=20, verbose_name='现居')),
                ('qqimage', models.ImageField(upload_to='', verbose_name='qq二维码')),
                ('weixin', models.ImageField(upload_to='', verbose_name='微信二维码')),
                ('img', models.ImageField(upload_to='', verbose_name='用户头像')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除此用户')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'abstract': False,
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='标题')),
                ('brief', models.CharField(max_length=128, verbose_name='简介')),
                ('text', models.TextField(verbose_name='正文')),
                ('image', models.ImageField(upload_to='', verbose_name='预览图')),
                ('create_time', models.DateTimeField(default=datetime.datetime(2019, 6, 19, 13, 15, 47, 844978), verbose_name='创建时间')),
                ('update_time', models.DateTimeField(default=datetime.datetime(2019, 6, 19, 13, 15, 47, 845012), verbose_name='更新时间')),
                ('is_tag', models.BooleanField(default=False, verbose_name='是否置顶')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除')),
            ],
            options={
                'verbose_name': '文章',
                'ordering': ['-create_time'],
                'verbose_name_plural': '文章',
            },
        ),
        migrations.CreateModel(
            name='Attention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(default=datetime.datetime(2019, 6, 19, 13, 15, 47, 848294), verbose_name='创建时间')),
                ('user_id', models.IntegerField(verbose_name='主用户')),
                ('target_user_id', models.IntegerField(verbose_name='从用户')),
                ('relation', models.IntegerField(default=0, verbose_name='状态')),
            ],
            options={
                'verbose_name': '用户关注',
                'verbose_name_plural': '用户关注',
            },
        ),
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='分类')),
                ('splendid', models.BooleanField(default=False, verbose_name='是否将此类在首页展示')),
                ('is_delete', models.BooleanField(default=False, verbose_name='逻辑删除')),
                ('pcat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sj', to='user.Catalog', verbose_name='上级分类')),
            ],
            options={
                'verbose_name': '博客分类',
                'verbose_name_plural': '博客分类',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=256, verbose_name='评论正文')),
                ('create_time', models.DateTimeField(default=datetime.datetime(2019, 6, 19, 13, 15, 47, 847447), verbose_name='创建时间')),
                ('article_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Article', verbose_name='文章id')),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Comment', verbose_name='上级评论')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '文章评论',
                'verbose_name_plural': '文章评论',
            },
        ),
        migrations.CreateModel(
            name='LBTImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='', verbose_name='轮播图')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '首页轮播图',
                'verbose_name_plural': '首页轮播图',
            },
        ),
        migrations.CreateModel(
            name='Liek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(default=datetime.datetime(2019, 6, 19, 13, 15, 47, 849692), verbose_name='点赞时间')),
                ('relation', models.IntegerField(verbose_name='对文章状态')),
                ('article_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Article', verbose_name='文章id')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '点赞',
                'verbose_name_plural': '点赞',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='标签名字')),
            ],
            options={
                'verbose_name': '博客标签',
                'verbose_name_plural': '博客标签',
            },
        ),
        migrations.CreateModel(
            name='TagZJ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Article', verbose_name='文章id')),
                ('tags_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Tags', verbose_name='标签id')),
            ],
            options={
                'verbose_name': '标签中间表',
                'verbose_name_plural': '标签中间表',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='article_catalog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Catalog', verbose_name='文章类型'),
        ),
        migrations.AddField(
            model_name='article',
            name='article_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
    ]
